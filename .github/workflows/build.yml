name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  python-build:
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd core
        pip install -r requirements-dev.txt
        pip install -e .
        cd ..
    
    - name: Code style check
      run: |
        cd core
        black . --check
        isort . --check
        flake8 log2ml/ tests/ --max-line-length=100 --extend-ignore=E203 --statistics --show-source --count
        cd ..
    
    - name: Test with pytest
      run: |
        cd core
        pytest tests/ --cov=log2ml --cov-report=xml
        cd ..
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./core/coverage.xml
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  tauri-build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: yarn
        cache-dependency-path: gui/vector-analyzer/yarn.lock

    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy

    - name: Rust lint
      run: |
        cd gui/vector-analyzer/src-tauri
        cargo fmt --check
        cargo clippy -- -D warnings

    - name: Install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

    - name: Install frontend dependencies
      run: |
        cd gui/vector-analyzer
        yarn install

    - name: Build Tauri app
      run: |
        cd gui/vector-analyzer
        yarn run tauri:build
